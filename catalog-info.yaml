apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: leave-request-app-backend
  description: Leave Request Application Backend
  annotations:
    github.com/project-slug: samjs-openchoreo-demo-2025-04/leave-request-app-backend
    # backstage.io/kubernetes-label-selector: 'core.choreo.dev/component=leave-request-app-backend,core.choreo.dev/organization=default-org,core.choreo.dev/project=internal-apps'
    backstage.io/kubernetes-id: leave-request-app-backend
  links:
    - url: https://github.com/samjs-openchoreo-demo-2025-04/leave-request-app-backend
      title: GitHub Repo
      icon: github
    - url: https://github.com/openchoreo/openchoreo
      title: OpenChoreo
      icon: web
  tags:
    - go
    - openchoreo
  labels:
    core.choreo.dev/name: leave-request-app-backend
    core.choreo.dev/organization: default-org
    core.choreo.dev/project: internal-apps
spec:
  type: service
  lifecycle: experimental
  owner: group:default/guests
  system: internal-apps
  providesApis:
    - leave-request-app-backend-api

---

apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: leave-request-app-backend-api
  description: Leave Request Application Backend
  links:
    - url: https://github.com/samjs-openchoreo-demo-2025-04/leave-request-app-backend
      title: GitHub Repo
      icon: github
    - url: https://github.com/openchoreo/openchoreo
      title: OpenChoreo
      icon: web
spec:
  type: openapi
  lifecycle: experimental
  owner: group:default/guests
  system: internal-apps
  definition: |
    openapi: 3.0.1
    info:
      title: Reading List
      description: This is a service that manages a list of reading items.
      contact: {}
      version: "1.0"
    servers:
    - url: http://localhost:8080/reading-list
    paths:
      /books:
        get:
          tags:
          - books
          summary: List all the reading list books
          responses:
            "200":
              description: successful operation
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/models.Book'
        post:
          tags:
          - books
          summary: Add a new book to the reading list
          requestBody:
            description: New book details
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/models.Book'
            required: true
          responses:
            "201":
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/models.Book'
            "400":
              description: invalid book details
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/utils.ErrorResponse'
            "409":
              description: book already exists
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/utils.ErrorResponse'
          x-codegen-request-body-name: request
      /books/{id}:
        get:
          tags:
          - books
          summary: Get reading list book by id
          parameters:
          - name: id
            in: path
            description: Book ID
            required: true
            schema:
              type: string
          responses:
            "200":
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/models.Book'
            "404":
              description: book not found
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/utils.ErrorResponse'
        put:
          tags:
          - books
          summary: Update a reading list book by id
          parameters:
          - name: id
            in: path
            description: Book ID
            required: true
            schema:
              type: string
          requestBody:
            description: Updated book details
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/models.Book'
            required: true
          responses:
            "200":
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/models.Book'
            "400":
              description: invalid book details
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/utils.ErrorResponse'
            "404":
              description: book not found
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/utils.ErrorResponse'
          x-codegen-request-body-name: request
        delete:
          tags:
          - books
          summary: Delete a reading list book by id
          parameters:
          - name: id
            in: path
            description: Book ID
            required: true
            schema:
              type: string
          responses:
            "200":
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/models.Book'
            "404":
              description: book not found
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/utils.ErrorResponse'
    components:
      schemas:
        models.Book:
          type: object
          properties:
            author:
              type: string
              example: J. R. R. Tolkien
            id:
              type: string
              example: fe2594d0-ccea-42a2-97ac-0487458b5642
            status:
              type: object
              example: to_read
              allOf:
              - $ref: '#/components/schemas/models.ReadStatus'
            title:
              type: string
              example: The Lord of the Rings
        models.ReadStatus:
          type: string
          enum:
          - to_read
          - reading
          - read
          x-enum-varnames:
          - ReadStatusToRead
          - ReadStatusReading
          - ReadStatusRead
        utils.ErrorResponse:
          type: object
          properties:
            message:
              type: string
              example: error message

